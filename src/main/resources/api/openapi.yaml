openapi: 3.0.3
info:
  title: Sample eCommerce App
  description: > 
    'This is a ***sample ecommerce app API***. You can find out more about Swager at [swagger.io](http://swagger.io).
    Description supports markdown markup. For example, you can use `inline code` useing back ticks.'
  termsOfService: https://github.com/nicolaespinu/e-Commerce
  contact:
    email: 11spinic@gmail.com
  license:
    name: MIT
    url: https://github.com/nicolaespinu/e-Commerce
  version: 1.0.0
externalDocs:
  description: Document link you want to generate along with API.
  url: http://swagger.io
servers:
  - url: https://eshop.swagger.io/v2
tags:
  - name: cart
    description: Everything about cart
    externalDocs:
      description: Find out more (extra document link)
      url: http://swagger.io
  - name: order
    description: Operations about orders
  - name: user
    description: Operations about users
paths:
  /api/v1/carts/{customerId}/items:
    post:
      tags:
        - cart
      summary: Adds an item in shoppiing cart
      description: Adds an item to the shopping cart
      operationId: addCartItemsByCustomerId
      parameters:
        - name: customerId
          in: path
          description: Customer identifier
          required: true
          schema:
            type: string
      requestBody:
        description: Item object
        content:
          application/xml:
            schema:
              $ref: '#/components/schemas/Item'
          application/json:
            schema:
              $ref: '#/components/schemas/Item'
      responses:
        201:
          description: Item added successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Item'
        404:
          description: Given customer ID does not exist
          content: {}

components:
  schemas:
    Cart:
      description: Shopping Cart of the user
      type: object
      properties:
        customerId:
          description: Id of the customer who possesses the cart
          type: string
        items:
          description: Collection of the items in cart.
          type: array
          items:
            $ref: '#/components/schemas/Item'
    Item:
      description: Items in shopping cart
      type: object
      properties:
        id:
          description: Item identifier
          type: string
        quantity:
          description: The item quantity
          type: integer
          format: int32
        unitPrice:
          description: The item's price per unit
          type: integer
          format: double